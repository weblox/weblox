AWSTemplateFormatVersion: '2010-09-09'
Resources:
  euwest1ecsinstanceprofile:
    Properties:
      Path: /
      Roles:
        - !Ref 'euwest1ecsrole'
    Type: AWS::IAM::InstanceProfile
  euwest1ecslive:
    Properties:
      ClusterName: live
      ClusterSettings:
        - Name: containerInsights
          Value: enabled
    Type: AWS::ECS::Cluster
  euwest1ecsliveapplicationloadbalancer:
    Properties:
      IpAddressType: ipv4
      LoadBalancerAttributes:
        - Key: access_logs.s3.enabled
          Value: 'true'
        - Key: access_logs.s3.bucket
          Value: mgmt.eu-west-1.weblox.io
        - Key: access_logs.s3.prefix
          Value: logs
      Scheme: internet-facing
      Subnets:
        - subnet-0777c674d3018efd6
        - subnet-0dec29b6660100d8d
        - subnet-095d86cbe447af65e
      Type: application
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
  euwest1ecsliveautoscalinggroup:
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref 'euwest1ecslivelaunchtemplate'
        Version: !GetAtt 'euwest1ecslivelaunchtemplate.LatestVersionNumber'
      MaxSize: 1
      MinSize: 1
      VPCZoneIdentifier:
        - subnet-0777c674d3018efd6
        - subnet-0dec29b6660100d8d
        - subnet-095d86cbe447af65e
    Type: AWS::AutoScaling::AutoScalingGroup
  euwest1ecslivelaunchtemplate:
    Properties:
      LaunchTemplateData:
        BlockDeviceMappings:
          - DeviceName: /dev/xvda
            Ebs:
              VolumeSize: 30
        CreditSpecification:
          CpuCredits: Unlimited
        IamInstanceProfile:
          Arn: !GetAtt 'euwest1ecsinstanceprofile.Arn'
        ImageId: ami-09cec0d91e6d220ea
        InstanceType: t3.micro
        KeyName: live-eu-west-1
        SecurityGroupIds:
          - !GetAtt 'euwest1ecslivesg.GroupId'
        UserData: !Base64 "#!/bin/bash\n/usr/bin/yum install -y awscli && aws s3 cp\
          \ s3://mgmt.eu-west-1.weblox.io/bootstrap/bootstrap.sh /root/bootstrap.sh\
          \ && chmod 700 /root/bootstrap.sh && /root/bootstrap.sh\n"
      LaunchTemplateName: ecs-live-launch-template
    Type: AWS::EC2::LaunchTemplate
  euwest1ecslivesg:
    Properties:
      GroupDescription: Security Group for ECS Live Cluster
      VpcId: vpc-0e2786487ff4f2ef4
    Type: AWS::EC2::SecurityGroup
  euwest1ecslivesgingresscluster:
    Properties:
      GroupId: !GetAtt 'euwest1ecslivesg.GroupId'
      IpProtocol: '-1'
      SourceSecurityGroupId: !GetAtt 'euwest1ecslivesg.GroupId'
    Type: AWS::EC2::SecurityGroupIngress
  euwest1ecslivesgingressmanagement:
    Properties:
      CidrIp: 86.162.11.226/32
      GroupId: !GetAtt 'euwest1ecslivesg.GroupId'
      IpProtocol: '-1'
    Type: AWS::EC2::SecurityGroupIngress
  euwest1ecsrole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - ec2:DescribeInstances
                  - ecs:CreateCluster
                  - ecs:DeregisterContainerInstance
                  - ecs:DiscoverPollEndpoint
                  - ecs:Poll
                  - ecs:RegisterContainerInstance
                  - ecs:StartTelemetrySession
                  - ecs:Submit*
                  - ecr:BatchCheckLayerAvailability
                  - ecr:BatchGetImage
                  - ecr:GetDownloadUrlForLayer
                  - ecr:GetAuthorizationToken
                  - s3:ListAllMyBuckets
                Effect: Allow
                Resource: '*'
              - Action:
                  - s3:ListBucket*
                  - s3:ListObjects*
                  - s3:GetBucketLocation
                  - s3:GetObject*
                Effect: Allow
                Resource:
                  - arn:aws:s3:::mgmt.eu-west-1.weblox.io
                  - arn:aws:s3:::mgmt.eu-west-1.weblox.io/*
              - Action: s3:PutObject*
                Effect: Allow
                Resource:
                  - arn:aws:s3:::mgmt.eu-west-1.weblox.io/logs
                  - arn:aws:s3:::mgmt.eu-west-1.weblox.io/logs/*
              - Action: s3:GetObject*
                Effect: Deny
                Resource:
                  - arn:aws:s3:::mgmt.eu-west-1.weblox.io/logs
                  - arn:aws:s3:::mgmt.eu-west-1.weblox.io/logs/*
          PolicyName: ecs-service
    Type: AWS::IAM::Role

